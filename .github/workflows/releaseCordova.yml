# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release Cordova

on:
  push:
    branches: [ new-cordova-build ]

jobs:
  release:
    runs-on: ubuntu-latest
    environment: development

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: "yarn"
    - name: 🧶 Yarn install
      run: yarn ci

    - name: 🔍Lint code
      run: yarn lint

    - name: 📚Read package.json
      id: pkg
      uses: jaywcjlove/github-action-package@v1.3.0

    - name: Set Version Number Variable
      id: versionNumber
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return '${{ steps.pkg.outputs.version }}-development-${{ github.run_number }}'
    - name: Set App ID Variable
      id: appId
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return '${{ steps.pkg.outputs.name }}.development'

    - name: ⬆ Update package.json version
      uses: jossef/action-set-json-field@v2.1
      with:
        file: package.json
        field: version
        value: ${{ steps.versionNumber.outputs.result }}

    - name: ⬆ Update package.json app environment
      uses: jossef/action-set-json-field@v2.1
      with:
        file: package.json
        field: name
        value: ${{ steps.appId.outputs.result }}


    - name: ⬆ Update package.json product name
      uses: jossef/action-set-json-field@v2.1
      with:
        file: package.json
        field: productName
        value: ${{ steps.pkg.outputs.productName }} Development

    - name: 📦 Pack for 🕸web with Node.js
      run: yarn pack:web

    - name: 📡 Upload PWA Artifact
      uses: actions/upload-artifact@v3
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-PWA
        path: dist/web

    - name: 🚧 Setup Android SDK Tools
      uses: android-actions/setup-android@v2.0.9

    - name: 📦 Pack for 📱Android with Node.js & Cordova
      run: yarn pack:cordova

    - name: 🦴 Fetch keystore from secrets
      run: |
         while read -r line;
         do
           echo "${line}" >> freetube.keystore.asc
         done <<< '${{ secrets.KEYSTORE }}'
         gpg -d --passphrase '${{ secrets.KEYSTORE_PASSWORD }}' --batch freetube.keystore.asc >> freetube.keystore

    - name: 👷‍♀️ Build APK with Cordova with Node.js
      run: yarn build:cordova freetube-${{ steps.versionNumber.outputs.result }}.apk ./freetube.keystore ${{ secrets.KEYSTORE_PASSWORD }}

    - name: 📡 Upload Cordova APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-Android.apk
        path: dist/freetube-${{ steps.versionNumber.outputs.result }}.apk

      - name: 🏗Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder'
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_SERVER }} >> ~/.ssh/known_hosts
      - name: 🚀Deploy with scp
        run: scp -r $(pwd) ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }}:~/FreeTubeCordova/
